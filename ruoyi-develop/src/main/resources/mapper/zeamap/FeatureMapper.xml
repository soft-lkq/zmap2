<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.zeamap.mapper.FeatureMapper">

    <select id="selectUniqueName" resultType="String">
        select distinct uniquename
        from feature
    </select>

    <select id="selectCommonName" resultType="String">
        select distinct commonname
        from feature
    </select>
    <select id="selectChrom" resultType="String">
        select distinct chrom
        from featureloc
    </select>

    <select id="selectName" resultType="String">
        select distinct name
        from cvterm
    </select>

    <resultMap type="QueryResult" id="QueryResult">
        <result property="featureId"    column="feature_id"    />
        <result property="accession"    column="accession"    />
        <result property="version"    column="version"    />
        <result property="commonname"    column="commonname"    />
        <result property="uniquename"    column="uniquename"    />
        <result property="chrom"    column="chrom"    />
        <result property="start"    column="fmin"    />
        <result property="end"    column="fmax"    />
        <result property="strand"    column="strand"    />
        <result property="name"    column="name"    />
    </resultMap>

    <select id="selectQueryResult" parameterType="com.ruoyi.zeamap.domain.QueryCriteria" resultMap="QueryResult">
        select feature.feature_id,feature.commonname,feature.uniquename,dbxref.accession,dbxref.version,featureloc.chrom,featureloc.fmin,featureloc.fmax,featureloc.strand,cvterm.name
        from feature,dbxref,featureloc,cvterm
        where feature.dbxref_id = dbxref.dbxref_id and feature.feature_id = featureloc.feature_id and feature.type_id = cvterm.cvterm_id
            and feature.feature_id in(
                select criterria1.feature_id
                from
                (
                    select distinct feature_id
                    from feature
                    where dbxref_id in(
                        select dbxref_id
                        from dbxref
                        where ( ( accession=#{accession} or #{accession}='' or #{accession} is null ) and ( version=#{version} or #{version}='' or #{version} is null) )
                    )
                )as criterria1
                join
                (
                    select distinct feature_id
                    from featureloc
                    <where>
                    <if test="chrom != null  and chrom != ''"> and chrom = #{chrom}</if>
                    and (cast(fmin as signed) >= cast(#{start} as signed) or (#{chrom}='' or #{chrom} is null or #{start}='' or #{start} is null) )
                    and (cast(fmax as signed) &lt;= cast(#{end} as signed) or (#{chrom}='' or #{chrom} is null or #{end}='' or #{end} is null) )
                    </where>
                )as criterria2
                    on criterria1.feature_id = criterria2.feature_id
                join
                (
                    select distinct feature_id
                    from feature
                    where (
                        commonname like concat('%',#{commonname},'%') or (#{commonname} is null or #{commonname}='')
                        and uniquename like concat('%',#{uniquename},'%') or (#{uniquename} is null or #{uniquename}='')

                    )
                )as criterria3
                    on criterria2.feature_id = criterria3.feature_id
            )
    </select>

    <select id="download" parameterType="String" resultMap="QueryResult">
        select feature.feature_id,feature.commonname,feature.uniquename,dbxref.accession,dbxref.version,featureloc.chrom,featureloc.fmin,featureloc.fmax,featureloc.strand,cvterm.name
        from feature,dbxref,featureloc,cvterm
        where feature.dbxref_id = dbxref.dbxref_id and feature.feature_id = featureloc.feature_id and feature.type_id = cvterm.cvterm_id
          and feature.feature_id = #{feature_id}
    </select>

    <select id="selectSummary" parameterType="String" resultType="com.ruoyi.zeamap.domain.SkipResult">
        select commonname featureName,name featureType,dbxref.accession germplasm,concat('GFF Version ',version) featureAnnotationVersion,
               concat(chrom,':',fmin,'-',fmax) featureLocation
        from feature,cvterm,dbxref,featureloc
        where feature.feature_id = #{featureId} and feature.type_id = cvterm.cvterm_id
            and feature.dbxref_id = dbxref.dbxref_id and feature.feature_id = featureloc.feature_id
    </select>

    <select id="selectFunctionAnnotation" parameterType="String" resultType="com.ruoyi.zeamap.domain.FunctionAnnotation">
        select accession id,cv.name ontology,cv.definition,cvterm.name term
        from feature,dbxref,cv,cvterm
        where feature.feature_id = #{featureId} and feature.dbxref_id = dbxref.dbxref_id
            and feature.type_id = cvterm.cvterm_id and cv.feature_id = feature.feature_id
    </select>

    <select id="selectSequences" parameterType="String" resultType="String">
        select residues sequences
        from feature
        where feature.feature_id = #{featureId}
    </select>
    <select id="selectSeqlen" parameterType="String" resultType="String">
        select seqlen
        from feature
        where feature.feature_id = #{featureId}
    </select>










    <resultMap type="Feature" id="FeatureResult">
        <result property="featureId"    column="feature_id"    />
        <result property="uniquename"    column="uniquename"    />
        <result property="residues"    column="residues"    />
        <result property="seqlen"    column="seqlen"    />
        <result property="dbxrefId"    column="dbxref_id"    />
        <result property="typeId"    column="type_id"    />
        <result property="commonname"    column="commonname"    />
    </resultMap>

    <sql id="selectFeatureVo">
        select feature_id, uniquename, residues, seqlen, dbxref_id, type_id, commonname from feature
    </sql>

    <select id="selectFeatureList" parameterType="Feature" resultMap="FeatureResult">
        <include refid="selectFeatureVo"/>
        <where>
            <if test="uniquename != null  and uniquename != ''"> and uniquename like concat('%', #{uniquename}, '%')</if>
            <if test="residues != null  and residues != ''"> and residues = #{residues}</if>
            <if test="seqlen != null  and seqlen != ''"> and seqlen = #{seqlen}</if>
            <if test="dbxrefId != null "> and dbxref_id = #{dbxrefId}</if>
            <if test="typeId != null "> and type_id = #{typeId}</if>
            <if test="commonname != null  and commonname != ''"> and commonname like concat('%', #{commonname}, '%')</if>
        </where>
    </select>

    <select id="selectFeatureByFeatureId" parameterType="Long" resultMap="FeatureResult">
        <include refid="selectFeatureVo"/>
        where feature_id = #{featureId}
    </select>
<!--侯永杰-->
<select id="selectByUniquename" parameterType="String" resultType="Long">
        select feature_id from feature where uniquename =#{uniquename}
    </select>

    <insert id="insertFeature" parameterType="Feature">
        insert into feature
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="featureId != null">feature_id,</if>
            <if test="uniquename != null">uniquename,</if>
            <if test="residues != null">residues,</if>
            <if test="seqlen != null">seqlen,</if>
            <if test="dbxrefId != null">dbxref_id,</if>
            <if test="typeId != null">type_id,</if>
            <if test="commonname != null">commonname,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="featureId != null">#{featureId},</if>
            <if test="uniquename != null">#{uniquename},</if>
            <if test="residues != null">#{residues},</if>
            <if test="seqlen != null">#{seqlen},</if>
            <if test="dbxrefId != null">#{dbxrefId},</if>
            <if test="typeId != null">#{typeId},</if>
            <if test="commonname != null">#{commonname},</if>
         </trim>
    </insert>

    <update id="updateFeature" parameterType="Feature">
        update feature
        <trim prefix="SET" suffixOverrides=",">
            <if test="uniquename != null">uniquename = #{uniquename},</if>
            <if test="residues != null">residues = #{residues},</if>
            <if test="seqlen != null">seqlen = #{seqlen},</if>
            <if test="dbxrefId != null">dbxref_id = #{dbxrefId},</if>
            <if test="typeId != null">type_id = #{typeId},</if>
            <if test="commonname != null">commonname = #{commonname},</if>
        </trim>
        where feature_id = #{featureId}
    </update>

    <delete id="deleteFeatureByFeatureId" parameterType="Long">
        delete from feature where feature_id = #{featureId}
    </delete>

    <delete id="deleteFeatureByFeatureIds" parameterType="String">
        delete from feature where feature_id in
        <foreach item="featureId" collection="array" open="(" separator="," close=")">
            #{featureId}
        </foreach>
    </delete>
</mapper>
