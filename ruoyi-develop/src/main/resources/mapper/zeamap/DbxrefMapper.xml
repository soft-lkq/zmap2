<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.zeamap.mapper.DbxrefMapper">

    <select id="selectAccession" parameterType="String" resultType="String">
        select distinct accession
        from dbxref D,db DB
        where DB.db_id = D.db_id and DB.name like '%GFF'
    </select>

    <select id="selectVersionByAccession" parameterType="String" resultType="String">
        select distinct D.version
        from dbxref D
        where accession = #{accession} and D.version is not null and D.version != ''
    </select>


    <resultMap type="Dbxref" id="DbxrefResult">
        <result property="dbxrefId"    column="dbxref_id"    />
        <result property="accession"    column="accession"    />
        <result property="version"    column="version"    />
        <result property="description"    column="description"    />
        <result property="dbId"    column="db_id"    />
    </resultMap>

    <sql id="selectDbxrefVo">
        select dbxref_id, accession, version, description, db_id from dbxref
    </sql>

    <select id="selectDbxrefList" parameterType="Dbxref" resultMap="DbxrefResult">
        <include refid="selectDbxrefVo"/>
        <where>
            <if test="accession != null  and accession != ''"> and accession = #{accession}</if>
            <if test="version != null  and version != ''"> and version = #{version}</if>
            <if test="description != null  and description != ''"> and description = #{description}</if>
            <if test="dbId != null "> and db_id = #{dbId}</if>
        </where>
    </select>

    <select id="selectDbxrefByDbxrefId" parameterType="Long" resultMap="DbxrefResult">
        <include refid="selectDbxrefVo"/>
        where dbxref_id = #{dbxrefId}
    </select>

    <insert id="insertDbxref" parameterType="Dbxref">
        insert into dbxref
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="dbxrefId != null">dbxref_id,</if>
            <if test="accession != null">accession,</if>
            <if test="version != null">version,</if>
            <if test="description != null">description,</if>
            <if test="dbId != null">db_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="dbxrefId != null">#{dbxrefId},</if>
            <if test="accession != null">#{accession},</if>
            <if test="version != null">#{version},</if>
            <if test="description != null">#{description},</if>
            <if test="dbId != null">#{dbId},</if>
         </trim>
    </insert>

    <update id="updateDbxref" parameterType="Dbxref">
        update dbxref
        <trim prefix="SET" suffixOverrides=",">
            <if test="accession != null">accession = #{accession},</if>
            <if test="version != null">version = #{version},</if>
            <if test="description != null">description = #{description},</if>
            <if test="dbId != null">db_id = #{dbId},</if>
        </trim>
        where dbxref_id = #{dbxrefId}
    </update>

    <delete id="deleteDbxrefByDbxrefId" parameterType="Long">
        delete from dbxref where dbxref_id = #{dbxrefId}
    </delete>

    <delete id="deleteDbxrefByDbxrefIds" parameterType="String">
        delete from dbxref where dbxref_id in
        <foreach item="dbxrefId" collection="array" open="(" separator="," close=")">
            #{dbxrefId}
        </foreach>
    </delete>
</mapper>
